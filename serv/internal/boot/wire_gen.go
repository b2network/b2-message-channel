// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package boot

import (
	"bsquared.network/b2-message-channel-serv/internal/config"
	"bsquared.network/b2-message-channel-serv/internal/controllers"
	"bsquared.network/b2-message-channel-serv/internal/repository"
	"bsquared.network/b2-message-channel-serv/internal/services"
	"github.com/google/wire"
	"gorm.io/gorm"
)

// Injectors from injector.go:

func Init(db *gorm.DB, cache *config.Cache, cfg config.AppConfig) *Initialization {
	messageRepositoryImpl := repository.MessageRepositoryInit(db)
	messageServiceImpl := services.MessageServiceInit(messageRepositoryImpl)
	messageControllerImpl := controllers.MessageControllerInit(messageServiceImpl, db, cfg)
	messageInitialization := NewMessageInitialization(messageRepositoryImpl, messageServiceImpl, messageControllerImpl)
	initialization := NewInitialization(messageInitialization)
	return initialization
}

// injector.go:

var appConfig = wire.NewSet(config.LoadConfig)

var MessageInitSet = wire.NewSet(NewMessageInitialization)

var MessageServiceSet = wire.NewSet(services.MessageServiceInit, wire.Bind(new(services.MessageService), new(*services.MessageServiceImpl)))

var MessageRepoSet = wire.NewSet(repository.MessageRepositoryInit, wire.Bind(new(repository.MessageRepository), new(*repository.MessageRepositoryImpl)))

var MessageCtrlSet = wire.NewSet(controllers.MessageControllerInit, wire.Bind(new(controllers.MessageController), new(*controllers.MessageControllerImpl)))
